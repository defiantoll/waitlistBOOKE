/* eslint-disable @typescript-eslint/no-explicit-any */

'use client';

import { useState, useEffect } from 'react';

// –¢–∏–ø–∏–∑–∞—Ü–∏—è –¥–ª—è Telegram WebApp User
interface TelegramUser {
  id: number;
  first_name: string;
  last_name?: string;
  username?: string;
  photo_url?: string;
  hash: string;
}

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã
const rewards = [
  { points: 100, name: '–°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞' },
  { points: 300, name: '–†–µ–¥–∫–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂' },
  { points: 500, name: 'VIP –±–µ–π–¥–∂' },
  { points: 1000, name: '–†–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø –∫ –º–∞—Ä–∫–µ—Ç—É' },
];

export default function Home() {
  // –°–æ—Å—Ç–æ—è–Ω–∏—è
  const [user, setUser] = useState<TelegramUser | null>(null);
  const [points, setPoints] = useState(0);
  const [rank, setRank] = useState<number | null>(null);
  const [referralLink, setReferralLink] = useState('');
  const [isJoined, setIsJoined] = useState(false);
  const [showSnackbar, setShowSnackbar] = useState(false);
  const [copied, setCopied] = useState(false);
  const [loading, setLoading] = useState(false);

  // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram WebApp API
  useEffect(() => {
    if (typeof window !== 'undefined' && (window as any).Telegram?.WebApp?.initDataUnsafe?.user) {
      const tgUser = (window as any).Telegram.WebApp.initDataUnsafe.user;
      setUser(tgUser);
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
      setReferralLink(`t.me/BookeBot?start=ref${tgUser.id}`);
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å –∫ /status, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–ª—ã –∏ –º–µ—Å—Ç–æ (–º–æ–∫)
      // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:
      setPoints(0);
      setRank(999);
    }
  }, []);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–µ–¥—É—é—â—É—é –Ω–∞–≥—Ä–∞–¥—É
  const nextReward = rewards.find(r => r.points > points) || rewards[rewards.length - 1];
  const progressPercentage = Math.min((points / nextReward.points) * 100, 100);

  // –ö–ª–∏–∫ –ø–æ "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è"
  const handleJoin = async () => {
    if (!user) return;
    setLoading(true);
    // –ú–æ–∫–æ–≤—ã–π POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ /join
    await new Promise(res => setTimeout(res, 800));
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏: await fetch('/api/join', ...)
    setIsJoined(true);
    setPoints(20); // –ù–∞—á–∏—Å–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ –±–∞–ª–ª—ã
    setRank(158); // –ú–æ–∫–æ–≤–æ–µ –º–µ—Å—Ç–æ
    setShowSnackbar(true);
    setLoading(false);
    setTimeout(() => setShowSnackbar(false), 3000);
  };

  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ-—Å—Å—ã–ª–∫–∏
  const copyReferralLink = async () => {
    try {
      await navigator.clipboard.writeText(referralLink);
      setCopied(true);
      setTimeout(() => setCopied(false), 2000);
    } catch (err) {
      console.error('Failed to copy:', err);
    }
  };

  return (
    <div className="min-h-screen bg-[#101014] text-[#ededed]">
      {/* Header */}
      <header className="text-center py-12 px-4">
        <h1 className="text-4xl font-bold mb-2 animate-fade-in">
          Booke Wait List
        </h1>
        <p className="text-[#b0b0b0] text-lg">
          –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É
        </p>
      </header>

      {/* Main Content */}
      <main className="max-w-md mx-auto px-4 space-y-6">
        {/* Status Card */}
        <div className="card animate-fade-in">
          <div className="text-center mb-6">
            <h2 className="text-2xl font-bold mb-2">
              –í–∞—à–µ –º–µ—Å—Ç–æ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ
            </h2>
            <div className="text-4xl font-bold text-white">
              {rank !== null ? `#${rank}` : '‚Äî'}
            </div>
          </div>

          <div className="text-center mb-6">
            <h3 className="text-lg font-semibold mb-2">–ë–∞–ª–ª—ã</h3>
            <div className="text-3xl font-bold text-white">
              {points} / {nextReward.points}
            </div>
          </div>

          {/* Progress Bar */}
          <div className="mb-4">
            <div className="progress-bar">
              <div 
                className="progress-fill"
                style={{ width: `${progressPercentage}%` }}
              />
            </div>
          </div>

          {/* Next Reward */}
          <div className="text-center">
            <p className="text-sm text-[#b0b0b0] mb-1">
              üéÅ –°–ª–µ–¥—É—é—â–∞—è –Ω–∞–≥—Ä–∞–¥–∞:
            </p>
            <p className="font-semibold text-white">
              {nextReward.name} @{nextReward.points} –±–∞–ª–ª–æ–≤
            </p>
          </div>
        </div>

        {/* Referral Section */}
        <div className="card animate-fade-in">
          <h3 className="text-xl font-bold mb-4 text-center">
            –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π
          </h3>
          <p className="text-[#b0b0b0] text-center mb-4">
            –ü–æ–ª—É—á–∞–π—Ç–µ +100 –±–∞–ª–ª–æ–≤ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞
          </p>

          {/* Referral Link */}
          <div className="bg-[#23232a] rounded-2xl p-4 mb-4">
            <p className="text-sm text-[#b0b0b0] mb-2">–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</p>
            <div className="flex items-center gap-2">
              <input
                type="text"
                value={referralLink}
                readOnly
                className="flex-1 bg-[#18181f] border border-[#23232a] rounded-xl px-3 py-2 text-sm text-white"
              />
              <button
                onClick={copyReferralLink}
                className={`copy-btn ${copied ? 'bg-green-100 text-green-700' : ''}`}
              >
                {copied ? '‚úì' : '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å'}
              </button>
            </div>
          </div>
        </div>

        {/* Join Button */}
        <div className="text-center animate-fade-in">
          {!isJoined ? (
            <button
              onClick={handleJoin}
              className="btn-primary w-full text-lg py-4"
              disabled={loading}
            >
              {loading ? '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ...' : '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è'}
            </button>
          ) : (
            <div className="bg-[#23232a] border border-green-700 rounded-2xl p-4">
              <div className="text-green-400 font-semibold text-lg">
                ‚úÖ –í—ã –≤ —Å–ø–∏—Å–∫–µ –æ–∂–∏–¥–∞–Ω–∏—è!
              </div>
              <p className="text-green-400 text-sm mt-1">
                –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–æ–≤
              </p>
            </div>
          )}
        </div>

        {/* Rewards Info */}
        <div className="card animate-fade-in">
          <h3 className="text-xl font-bold mb-4 text-center">
            –°–∏—Å—Ç–µ–º–∞ –Ω–∞–≥—Ä–∞–¥
          </h3>
          <div className="space-y-3 text-sm">
            {rewards.map(r => (
              <div key={r.points} className="flex justify-between items-center">
                <span className="text-[#ededed]">üéÅ {r.points} –±–∞–ª–ª–æ–≤</span>
                <span className="font-semibold text-white">{r.name}</span>
              </div>
            ))}
          </div>
        </div>
      </main>

      {/* Snackbar */}
      {showSnackbar && (
        <div className="snackbar animate-slide-in">
          ‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ —Å–ø–∏—Å–∫—É –æ–∂–∏–¥–∞–Ω–∏—è!
        </div>
      )}
    </div>
  );
}
